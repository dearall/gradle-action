buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
    }
    dependencies {
        classpath libs.h2
    }
}

ext.h2TcpPort = 9092
ext.h2StartupBlockMs = 2000
ext.tcpPassword = '32147'

task startDatabase(type: H2DatabaseStarter) {
    group = 'database'
    description = 'Starts database.'

    tcpPort = h2TcpPort
    passwordForShutdown = tcpPassword
    blockMs = h2StartupBlockMs
}

task stopDatabase(type: JavaExec) {
    group = 'database'
    description = 'Stops database.'
    classpath = buildscript.configurations.classpath
    mainClass = 'org.h2.tools.Server'
    args = ['-tcpShutdown', "tcp://localhost:${h2TcpPort}", '-tcpPassword', "${tcpPassword}"]
}

task buildSchema(type: JavaExec, dependsOn: startDatabase) {
    group = 'database'
    description = 'Builds database schema.'
    classpath = buildscript.configurations.classpath
    workingDir = projectDir
    mainClass = 'org.h2.tools.RunScript'
    args = ['-url', 'jdbc:h2:~/todo', '-user', 'sa', '-script', 'create-todo.sql']
}

task startAndPrepareDatabase(dependsOn: buildSchema)

class H2DatabaseStarter extends DefaultTask {
    @Input
    Integer tcpPort

    @Input
    String  passwordForShutdown

    @Input
    Integer blockMs

    @TaskAction
    void start() {
        new Thread(new H2Server(tcpPort, passwordForShutdown)).start()
        Thread.sleep(blockMs)
    }

    private class H2Server implements Runnable {
        final Integer tcpPort
        final String  passwordForShutdown

        H2Server(Integer tcpPort, String passwordForShutdown) {
            this.tcpPort = tcpPort
            this.passwordForShutdown = passwordForShutdown
        }

        @Override
        void run() {
            org.h2.tools.Server.main('-tcp', '-tcpPort', tcpPort.toString(), '-tcpPassword', passwordForShutdown)
        }
    }
}